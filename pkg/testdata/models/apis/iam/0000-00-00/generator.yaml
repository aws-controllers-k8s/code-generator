ignore:
  resource_names:
   - AccessKey
   - AccountAlias
   - Group
   - InstanceProfile
   - LoginProfile
   - OpenIDConnectProvider
   - Policy
   - PolicyVersion
   #- Role
   - SAMLProvider
   - ServiceLinkedRole
   - ServiceSpecificCredential
   #- User
   - VirtualMFADevice
resources:
  Role:
    renames:
      operations:
        CreateRole:
          input_fields:
            RoleName: Name
        GetRole:
          input_fields:
            RoleName: Name
        UpdateRole:
          input_fields:
            RoleName: Name
        DeleteRole:
          input_fields:
            RoleName: Name
    fields:
      PermissionsBoundary:
        set:
          # The input and output shapes are different...
          - from: PermissionsBoundary.PermissionsBoundaryArn
      # Test the custom field creation inference for simple scalar, list or map
      # fields
      Policies:
        type: "[]*string"
      LoggingConfig:
        type: "map[string]*bool"
      MyCustomInteger:
        type: "*int64"
  User:
    renames:
      operations:
        CreateUser:
          input_fields:
            UserName: Name
    fields:
      PermissionsBoundary:
        references:
          resource: Policy
          path: Status.ACKResourceMetadata.ARN
        set:
          # The input and output shapes are different...
          - from: PermissionsBoundary.PermissionsBoundaryArn
      # In order to support attaching zero or more policies to a user, we use
      # custom update code path code that uses the Attach/DetachUserPolicy API
      # calls to manage the set of PolicyARNs attached to this User.
      Policies:
        type: "[]*string"
        references:
          resource: Policy
          path: Status.ACKResourceMetadata.ARN
      Tags:
        compare:
          is_ignored: true